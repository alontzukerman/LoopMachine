{"version":3,"sources":["audio_files/120_future_funk_beats_25.mp3","logo.svg","context.js","EventBus.js","components/Pad.js","Recorder.js","components/ControlPanel.js","audio_files/120_stutter_breakbeats_16.mp3","audio_files/Bass Warwick heavy funk groove on E 120 BPM.mp3","audio_files/electric guitar coutry slide 120bpm - B.mp3","audio_files/FUD_120_StompySlosh.mp3","audio_files/GrooveB_120bpm_Tanggu.mp3","audio_files/MazePolitics_120_Perc.mp3","audio_files/PAS3GROOVE1.03B.mp3","audio_files/SilentStar_120_Em_OrganSynth.mp3","audio_files/index.js","components/Record.js","components/Records.js","App.js","reportWebVitals.js","index.js"],"names":["TimeInSeconds","React","createContext","eventBus","event","callback","document","addEventListener","e","detail","data","dispatchEvent","CustomEvent","StyledPad","styled","div","props","isOn","isPlaying","Pad","audioFile","useState","setIsOn","audioEl","useRef","time","useContext","useEffect","current","load","loop","message","currentTime","timeInSeconds","play","pause","reset","onClick","handleClick","ref","src","Recorder","source","cfg","config","bufferLen","numChannels","mimeType","recording","callbacks","getBuffer","exportWAV","Object","assign","this","context","node","createScriptProcessor","createJavaScriptNode","call","onaudioprocess","buffer","channel","push","inputBuffer","getChannelData","worker","postMessage","command","connect","destination","InlineWorker","sampleRate","recLength","recBuffers","initBuffers","mergeBuffers","result","Float32Array","offset","i","length","set","writeString","view","string","setUint8","charCodeAt","onmessage","record","type","interleaved","buffers","inputL","inputR","index","inputIndex","interleave","dataview","samples","ArrayBuffer","DataView","setUint32","setUint16","output","input","s","Math","max","min","setInt16","floatTo16BitPCM","encodeWAV","audioBlob","Blob","cb","pop","Error","blob","filename","url","window","URL","webkitURL","createObjectURL","link","createElement","href","download","click","createEvent","initEvent","StyledPanel","toggle","TogglePanel","PanelButtons","StyledIcons","IconDiv","Time","ControlPanel","handleState","start","setStart","setToggle","isRecording","setIsRecording","setRecord","recordRef","bool","setTimeInSeconds","setAllPads","handleRecord","stop","blobUrl","date","Date","now","newRecord","rec","navigator","mediaDevices","getDisplayMedia","audio","video","then","stream","AudioContext","createMediaStreamSource","catch","err","console","log","startRecord","fontSize","toFixed","f","files","future_funk","stutter_break","heavy_funk","electric_guitar","stompy_slosh","tanggu","maze_politics","pase_groove","silent_star","RecordContainer","Span","span","Record","on","setOn","handlePlay","RecordsContainer","open","ToggleMenu","hasRecord","Records","records","setRecords","openRecords","setOpenRecords","map","StyledApp","Title","h2","StyledPadsContainer","App","setIsPlaying","interval","setInterval","clearInterval","Provider","value","file","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.a5543297.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/120_future_funk_beats_25.5eb417fc.mp3\";","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from \"react\";\r\nexport const TimeInSeconds = React.createContext(0);\r\n","export const eventBus = {\r\n  on(event, callback) {\r\n    document.addEventListener(event, (e) => callback(e.detail));\r\n  },\r\n  dispatch(event, data) {\r\n    document.dispatchEvent(new CustomEvent(event, { detail: data }));\r\n  },\r\n  remove(event, callback) {\r\n    document.removeEventListener(event, callback);\r\n  },\r\n};\r\n","import React, { useContext, useEffect, useRef, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { TimeInSeconds } from \"../context\";\r\nimport { eventBus } from \"../EventBus\";\r\n\r\nfunction Pad({ isPlaying, audioFile }) {\r\n  // console.log(audioFile);\r\n  const [isOn, setIsOn] = useState(false); // pad indicator\r\n  const audioEl = useRef(null); // audio element\r\n\r\n  const time = useContext(TimeInSeconds); // global timer\r\n  useEffect(() => {\r\n    // load audio element\r\n    audioEl.current.load();\r\n    audioEl.current.loop = true;\r\n  }, []);\r\n  useEffect(() => {\r\n    eventBus.on(\"resetPads\", () => {\r\n      // reset pads when gets this event\r\n      setIsOn(false);\r\n    });\r\n    eventBus.on(\"setPadsOn\", ({ message }) => {\r\n      // set pads status\r\n      setIsOn(message);\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (isPlaying && isOn) {\r\n      audioEl.current.currentTime = time.timeInSeconds;\r\n      audioEl.current.play();\r\n    } else {\r\n      audioEl.current.pause();\r\n    }\r\n  }, [isPlaying, isOn]);\r\n  // switching pad status on click\r\n  // play pad sync with other running pads.\r\n  const handleClick = () => {\r\n    // console.log(isOn);\r\n    if (!isPlaying) return setIsOn(!isOn);\r\n    if (!isOn) {\r\n      audioEl.current.currentTime = time.timeInSeconds;\r\n      audioEl.current.play();\r\n    } else {\r\n      audioEl.current.pause();\r\n    }\r\n    setIsOn(!isOn);\r\n  };\r\n\r\n  return (\r\n    <StyledPad\r\n      reset={time.timeInSeconds === 0}\r\n      isPlaying={isPlaying}\r\n      isOn={isOn}\r\n      onClick={() => handleClick()}\r\n    >\r\n      <audio ref={audioEl} src={audioFile}></audio>\r\n    </StyledPad>\r\n  );\r\n}\r\n\r\nconst StyledPad = styled.div`\r\n  cursor: pointer;\r\n  border: 1px solid #f9f9f9;\r\n  box-shadow: 0 0 5px 2px rgba(50, 50, 50, 0.5);\r\n  ${(props) =>\r\n    props.isOn\r\n      ? props.isPlaying\r\n        ? `\r\n    border: 0 ;\r\n    animation: backgroundDancing 3s ease infinite;\r\n    `\r\n        : `background-color: rgb(110, 126, 214);`\r\n      : `background-color: '';`}\r\n`;\r\nexport default Pad;\r\n","import InlineWorker from \"inline-worker\";\r\n\r\nclass Recorder {\r\n  config = {\r\n    bufferLen: 4096,\r\n    numChannels: 2,\r\n    mimeType: \"audio/wav\",\r\n  };\r\n\r\n  recording = false;\r\n\r\n  callbacks = {\r\n    getBuffer: [],\r\n    exportWAV: [],\r\n  };\r\n\r\n  constructor(source, cfg) {\r\n    Object.assign(this.config, cfg);\r\n    this.context = source.context;\r\n    this.node = (this.context.createScriptProcessor || this.context.createJavaScriptNode).call(\r\n      this.context,\r\n      this.config.bufferLen,\r\n      this.config.numChannels,\r\n      this.config.numChannels\r\n    );\r\n\r\n    this.node.onaudioprocess = (e) => {\r\n      if (!this.recording) return;\r\n\r\n      var buffer = [];\r\n      for (var channel = 0; channel < this.config.numChannels; channel++) {\r\n        buffer.push(e.inputBuffer.getChannelData(channel));\r\n      }\r\n      this.worker.postMessage({\r\n        command: \"record\",\r\n        buffer: buffer,\r\n      });\r\n    };\r\n\r\n    source.connect(this.node);\r\n    this.node.connect(this.context.destination); //this should not be necessary\r\n\r\n    let self = {};\r\n    this.worker = new InlineWorker(function () {\r\n      let recLength = 0,\r\n        recBuffers = [],\r\n        sampleRate,\r\n        numChannels;\r\n\r\n      this.onmessage = function (e) {\r\n        switch (e.data.command) {\r\n          case \"init\":\r\n            init(e.data.config);\r\n            break;\r\n          case \"record\":\r\n            record(e.data.buffer);\r\n            break;\r\n          case \"exportWAV\":\r\n            exportWAV(e.data.type);\r\n            break;\r\n          case \"getBuffer\":\r\n            getBuffer();\r\n            break;\r\n          case \"clear\":\r\n            clear();\r\n            break;\r\n        }\r\n      };\r\n\r\n      function init(config) {\r\n        sampleRate = config.sampleRate;\r\n        numChannels = config.numChannels;\r\n        initBuffers();\r\n      }\r\n\r\n      function record(inputBuffer) {\r\n        for (var channel = 0; channel < numChannels; channel++) {\r\n          recBuffers[channel].push(inputBuffer[channel]);\r\n        }\r\n        recLength += inputBuffer[0].length;\r\n      }\r\n\r\n      function exportWAV(type) {\r\n        let buffers = [];\r\n        for (let channel = 0; channel < numChannels; channel++) {\r\n          buffers.push(mergeBuffers(recBuffers[channel], recLength));\r\n        }\r\n        let interleaved;\r\n        if (numChannels === 2) {\r\n          interleaved = interleave(buffers[0], buffers[1]);\r\n        } else {\r\n          interleaved = buffers[0];\r\n        }\r\n        let dataview = encodeWAV(interleaved);\r\n        let audioBlob = new Blob([dataview], { type: type });\r\n\r\n        this.postMessage({ command: \"exportWAV\", data: audioBlob });\r\n      }\r\n\r\n      function getBuffer() {\r\n        let buffers = [];\r\n        for (let channel = 0; channel < numChannels; channel++) {\r\n          buffers.push(mergeBuffers(recBuffers[channel], recLength));\r\n        }\r\n        this.postMessage({ command: \"getBuffer\", data: buffers });\r\n      }\r\n\r\n      function clear() {\r\n        recLength = 0;\r\n        recBuffers = [];\r\n        initBuffers();\r\n      }\r\n\r\n      function initBuffers() {\r\n        for (let channel = 0; channel < numChannels; channel++) {\r\n          recBuffers[channel] = [];\r\n        }\r\n      }\r\n\r\n      function mergeBuffers(recBuffers, recLength) {\r\n        let result = new Float32Array(recLength);\r\n        let offset = 0;\r\n        for (let i = 0; i < recBuffers.length; i++) {\r\n          result.set(recBuffers[i], offset);\r\n          offset += recBuffers[i].length;\r\n        }\r\n        return result;\r\n      }\r\n\r\n      function interleave(inputL, inputR) {\r\n        let length = inputL.length + inputR.length;\r\n        let result = new Float32Array(length);\r\n\r\n        let index = 0,\r\n          inputIndex = 0;\r\n\r\n        while (index < length) {\r\n          result[index++] = inputL[inputIndex];\r\n          result[index++] = inputR[inputIndex];\r\n          inputIndex++;\r\n        }\r\n        return result;\r\n      }\r\n\r\n      function floatTo16BitPCM(output, offset, input) {\r\n        for (let i = 0; i < input.length; i++, offset += 2) {\r\n          let s = Math.max(-1, Math.min(1, input[i]));\r\n          output.setInt16(offset, s < 0 ? s * 0x8000 : s * 0x7fff, true);\r\n        }\r\n      }\r\n\r\n      function writeString(view, offset, string) {\r\n        for (let i = 0; i < string.length; i++) {\r\n          view.setUint8(offset + i, string.charCodeAt(i));\r\n        }\r\n      }\r\n\r\n      function encodeWAV(samples) {\r\n        let buffer = new ArrayBuffer(44 + samples.length * 2);\r\n        let view = new DataView(buffer);\r\n\r\n        /* RIFF identifier */\r\n        writeString(view, 0, \"RIFF\");\r\n        /* RIFF chunk length */\r\n        view.setUint32(4, 36 + samples.length * 2, true);\r\n        /* RIFF type */\r\n        writeString(view, 8, \"WAVE\");\r\n        /* format chunk identifier */\r\n        writeString(view, 12, \"fmt \");\r\n        /* format chunk length */\r\n        view.setUint32(16, 16, true);\r\n        /* sample format (raw) */\r\n        view.setUint16(20, 1, true);\r\n        /* channel count */\r\n        view.setUint16(22, numChannels, true);\r\n        /* sample rate */\r\n        view.setUint32(24, sampleRate, true);\r\n        /* byte rate (sample rate * block align) */\r\n        view.setUint32(28, sampleRate * 4, true);\r\n        /* block align (channel count * bytes per sample) */\r\n        view.setUint16(32, numChannels * 2, true);\r\n        /* bits per sample */\r\n        view.setUint16(34, 16, true);\r\n        /* data chunk identifier */\r\n        writeString(view, 36, \"data\");\r\n        /* data chunk length */\r\n        view.setUint32(40, samples.length * 2, true);\r\n\r\n        floatTo16BitPCM(view, 44, samples);\r\n\r\n        return view;\r\n      }\r\n    }, self);\r\n\r\n    this.worker.postMessage({\r\n      command: \"init\",\r\n      config: {\r\n        sampleRate: this.context.sampleRate,\r\n        numChannels: this.config.numChannels,\r\n      },\r\n    });\r\n\r\n    this.worker.onmessage = (e) => {\r\n      let cb = this.callbacks[e.data.command].pop();\r\n      if (typeof cb == \"function\") {\r\n        cb(e.data.data);\r\n      }\r\n    };\r\n  }\r\n\r\n  record() {\r\n    this.recording = true;\r\n  }\r\n\r\n  stop() {\r\n    this.recording = false;\r\n  }\r\n\r\n  clear() {\r\n    this.worker.postMessage({ command: \"clear\" });\r\n  }\r\n\r\n  getBuffer(cb) {\r\n    cb = cb || this.config.callback;\r\n    if (!cb) throw new Error(\"Callback not set\");\r\n\r\n    this.callbacks.getBuffer.push(cb);\r\n\r\n    this.worker.postMessage({ command: \"getBuffer\" });\r\n  }\r\n\r\n  exportWAV(cb, mimeType) {\r\n    mimeType = mimeType || this.config.mimeType;\r\n    cb = cb || this.config.callback;\r\n    if (!cb) throw new Error(\"Callback not set\");\r\n\r\n    this.callbacks.exportWAV.push(cb);\r\n\r\n    this.worker.postMessage({\r\n      command: \"exportWAV\",\r\n      type: mimeType,\r\n    });\r\n  }\r\n\r\n  static forceDownload(blob, filename) {\r\n    let url = (window.URL || window.webkitURL).createObjectURL(blob);\r\n    let link = window.document.createElement(\"a\");\r\n    link.href = url;\r\n    link.download = filename || \"output.wav\";\r\n    let click = document.createEvent(\"Event\");\r\n    click.initEvent(\"click\", true, true);\r\n    link.dispatchEvent(click);\r\n  }\r\n}\r\n\r\nexport default Recorder;","import React, { useContext, useEffect, useRef, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { TimeInSeconds } from \"../context\";\r\nimport RecordRTC, { StereoAudioRecorder, MediaStreamRecorder } from \"recordrtc\";\r\n// import Recorder from \"recorder-js\";\r\nimport PlayArrowIcon from \"@material-ui/icons/PlayArrow\";\r\nimport PauseIcon from \"@material-ui/icons/Pause\";\r\nimport StopIcon from \"@material-ui/icons/Stop\";\r\nimport ExpandLessIcon from \"@material-ui/icons/ExpandLess\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport SentimentDissatisfiedRoundedIcon from \"@material-ui/icons/SentimentDissatisfiedRounded\";\r\nimport SentimentSatisfiedRoundedIcon from \"@material-ui/icons/SentimentSatisfiedRounded\";\r\nimport FiberManualRecordOutlinedIcon from \"@material-ui/icons/FiberManualRecordOutlined\";\r\nimport FiberManualRecordTwoToneIcon from '@material-ui/icons/FiberManualRecordTwoTone';\r\nimport { eventBus } from \"../EventBus\";\r\nimport { Icon } from \"@material-ui/core\";\r\nimport { useReactMediaRecorder } from \"react-media-recorder\";\r\nimport Recorder from \"../Recorder\";\r\n// import Records from './Records';\r\n\r\nfunction ControlPanel({ handleState }) {\r\n  const [start, setStart] = useState(false);\r\n  const [toggle, setToggle] = useState(false);\r\n  const [isRecording, setIsRecording] = useState(false);\r\n  const [record, setRecord] = useState(null);\r\n  // const [myRecords, setMyRecords] = useState([]);\r\n\r\n  const recordRef = useRef(null);\r\n\r\n  const time = useContext(TimeInSeconds);\r\n  const sendRecord = (blbUrl) => {\r\n    eventBus.remove(\"newRecord\");\r\n  };\r\n  const startRecord = () => {\r\n    let rec = null;\r\n    const constraints = { audio: true, video: true };\r\n    navigator.mediaDevices\r\n      .getDisplayMedia(constraints)\r\n      .then((stream) => {\r\n        const audioContext = new window.AudioContext();\r\n        const input = audioContext.createMediaStreamSource(stream);\r\n        rec = new Recorder(input, { numChannels: 1 });\r\n        // playSoundIn();\r\n        rec.record();\r\n        setRecord(rec);\r\n      })\r\n      .catch((err) => {\r\n        setIsRecording(false);\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const stopRecord = () => {\r\n    record.stop();\r\n    record.exportWAV((blob) => {\r\n      let blobUrl = URL.createObjectURL(blob);\r\n      // console.log(blobUrl);\r\n      let date = Date.now();\r\n      let newRecord = { record: blobUrl, date: date };\r\n      eventBus.dispatch(\"newRecord\", { newRecord });\r\n\r\n      // setMyRecords([...myRecords,blobUrl])\r\n      // recordRef.current.src = blobUrl ;\r\n      // recordRef.current.play();\r\n    });\r\n  };\r\n\r\n  const handleClick = (bool) => {\r\n    if (!bool && bool === start) {\r\n      time.setTimeInSeconds(0);\r\n      eventBus.dispatch(\"resetPads\", { message: \"reset pads\" });\r\n    }\r\n    if (bool !== start) {\r\n      setStart(bool);\r\n      handleState(bool);\r\n    }\r\n  };\r\n  const setAllPads = (bool) => {\r\n    eventBus.dispatch(\"setPadsOn\", { message: bool });\r\n  };\r\n  const handleToggle = () => {\r\n    // console.log(toggle);\r\n    setToggle(!toggle);\r\n  };\r\n\r\n  const handleRecord = () => {\r\n    isRecording ? stopRecord() : startRecord();\r\n    setIsRecording(!isRecording);\r\n  };\r\n\r\n  return (\r\n    <StyledPanel toggle={toggle}>\r\n      <TogglePanel onClick={() => handleToggle()}>\r\n        {toggle ? (\r\n          <ExpandMoreIcon fontSize=\"large\" />\r\n        ) : (\r\n          <ExpandLessIcon fontSize=\"large\" />\r\n        )}\r\n      </TogglePanel>\r\n      <PanelButtons>\r\n        <StyledIcons>\r\n          <IconDiv onClick={() => handleClick(!start)}>\r\n            {start ? (\r\n              <PauseIcon fontSize=\"large\" />\r\n            ) : (\r\n              <PlayArrowIcon fontSize=\"large\" />\r\n            )}\r\n          </IconDiv>\r\n          <IconDiv onClick={() => handleClick(false)}>\r\n            <StopIcon fontSize=\"large\" />\r\n          </IconDiv>\r\n          <IconDiv onClick={() => setAllPads(false)}>\r\n            <SentimentDissatisfiedRoundedIcon />\r\n          </IconDiv>\r\n          <IconDiv onClick={() => setAllPads(true)}>\r\n            <SentimentSatisfiedRoundedIcon />\r\n          </IconDiv>\r\n          <IconDiv onClick={() => handleRecord()}>\r\n            {isRecording ? (\r\n              <FiberManualRecordTwoToneIcon />\r\n            ) : (\r\n              <FiberManualRecordOutlinedIcon  fontSize=\"small\" />\r\n            )}\r\n          </IconDiv>\r\n        </StyledIcons>\r\n        <Time>{`00:0${time.timeInSeconds.toFixed(0)}`}</Time>\r\n      </PanelButtons>\r\n      <audio ref={recordRef} />\r\n    </StyledPanel>\r\n  );\r\n}\r\n\r\nconst StyledPanel = styled.div`\r\n  height: 100px;\r\n  width: 100%;\r\n  background-color: rgba(100, 100, 100, 0.6);\r\n  color: #f9f9f9;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  position: absolute;\r\n  bottom: 0;\r\n  transition: transform 0.2s ease;\r\n  transform: ${(props) =>\r\n    props.toggle ? \"translateY(0)\" : \"translateY(90px)\"};\r\n  @media (max-width: 480px) {\r\n    & > div:nth-child(2) {\r\n      flex-direction: column-reverse ;\r\n    }\r\n  }\r\n`;\r\n\r\nconst TogglePanel = styled.div`\r\n  cursor: pointer;\r\n  height: 40px;\r\n  width: 40px;\r\n  margin-top: -30px;\r\n`;\r\nconst PanelButtons = styled.div`\r\n  height: 90px;\r\n  width: 95%;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n`;\r\nconst StyledIcons = styled.div`\r\n  height: 100%;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\nconst IconDiv = styled.div`\r\n  cursor: pointer;\r\n  height: 40px;\r\n  width: 40px;\r\n  display: flex;\r\n  background-color: rgb(139, 82, 82);\r\n  border-radius: 50%;\r\n  margin-right: 10px;\r\n  justify-content: center;\r\n  align-items: center;\r\n  &:hover {\r\n    background-color: rgb(119, 53, 53);\r\n  }\r\n`;\r\n\r\nconst Time = styled.div`\r\n  height: 40px;\r\n  width: 150px;\r\n  font-size: 1.5em;\r\n  font-weight: bold;\r\n  letter-spacing: 5px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background-color: rgb(139, 82, 82);\r\n  border-radius: 5px;\r\n`;\r\nexport default ControlPanel;\r\n","export default __webpack_public_path__ + \"static/media/120_stutter_breakbeats_16.37c82282.mp3\";","export default __webpack_public_path__ + \"static/media/Bass Warwick heavy funk groove on E 120 BPM.52c24c81.mp3\";","export default __webpack_public_path__ + \"static/media/electric guitar coutry slide 120bpm - B.230fcab8.mp3\";","export default __webpack_public_path__ + \"static/media/FUD_120_StompySlosh.27bdc145.mp3\";","export default __webpack_public_path__ + \"static/media/GrooveB_120bpm_Tanggu.3e1411b4.mp3\";","export default __webpack_public_path__ + \"static/media/MazePolitics_120_Perc.2d08c654.mp3\";","export default __webpack_public_path__ + \"static/media/PAS3GROOVE1.03B.f77c6da4.mp3\";","export default __webpack_public_path__ + \"static/media/SilentStar_120_Em_OrganSynth.f2d668af.mp3\";","import future_funk from \"./120_future_funk_beats_25.mp3\";\r\nimport stutter_break from \"./120_stutter_breakbeats_16.mp3\";\r\nimport heavy_funk from \"./Bass Warwick heavy funk groove on E 120 BPM.mp3\";\r\nimport electric_guitar from \"./electric guitar coutry slide 120bpm - B.mp3\";\r\nimport stompy_slosh from \"./FUD_120_StompySlosh.mp3\";\r\nimport tanggu from \"./GrooveB_120bpm_Tanggu.mp3\";\r\nimport maze_politics from \"./MazePolitics_120_Perc.mp3\";\r\nimport pase_groove from \"./PAS3GROOVE1.03B.mp3\";\r\nimport silent_star from \"./SilentStar_120_Em_OrganSynth.mp3\";\r\n// var glob = require(\"glob\");\r\n// import glob from 'glob';\r\n// // options is optional\r\n// glob(\"*/.mp3\", function (er, files) {\r\n//   console.log(files);\r\n//   // files is an array of filenames.\r\n//   // If the `nonull` option is set, and nothing\r\n//   // was found, then files is [\"*/.js\"]\r\n//   // er is an error object or null.\r\n// });\r\n// import listReactFiles from 'list-react-files'\r\n\r\n// listReactFiles('./').then(files => console.log(files))\r\n\r\n// Import library\r\nimport ReactDynamicImport from \"react-dynamic-import\";\r\n// or const ReactDynamicImport = require('react-dynamic-import');\r\n \r\n/**\r\n * Define dynamic import loader function\r\n *\r\n * This loads specific module from many available\r\n * modules in the directory, using given module name\r\n */\r\nconst loader = f => import(`./120_future_funk_beats_25.mp3`);\r\nconsole.log(loader);\r\n// const loader = f => import(`./dynamic/${f}.js`);\r\nexport const files = [\r\n  future_funk,\r\n  stutter_break,\r\n  heavy_funk,\r\n  electric_guitar,\r\n  stompy_slosh,\r\n  tanggu,\r\n  maze_politics,\r\n  pase_groove,\r\n  silent_star,\r\n];\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport PlayCircleOutlineIcon from \"@material-ui/icons/PlayCircleOutline\";\r\nimport PauseCircleOutlineIcon from \"@material-ui/icons/PauseCircleOutline\";\r\nfunction Record({ record }) {\r\n  const [on, setOn] = useState(false);\r\n  const audioEl = useRef(null);\r\n\r\n  useEffect(() => {\r\n    audioEl.current.load();\r\n    audioEl.current.loop = false;\r\n  }, []);\r\n\r\n  const play = () => {\r\n    audioEl.current.play();\r\n  };\r\n  const stop = () => {\r\n    audioEl.current.pause();\r\n    audioEl.current.currentTime = 0;\r\n  };\r\n  const handlePlay = () => {\r\n    on ? stop() : play();\r\n    setOn(!on);\r\n  };\r\n  return (\r\n    <RecordContainer>\r\n      <Span onClick={() => handlePlay()}>\r\n        {on ? <PauseCircleOutlineIcon /> : <PlayCircleOutlineIcon />}\r\n      </Span>\r\n      <Span>{record.date}</Span>\r\n      <audio ref={audioEl} src={record.record} />\r\n    </RecordContainer>\r\n  );\r\n}\r\nconst RecordContainer = styled.div`\r\n  display: flex;\r\n  padding: 10px;\r\n`;\r\nconst Span = styled.span`\r\n  margin-right: 5px;\r\n`;\r\nexport default Record;\r\n","import styled from \"styled-components\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { eventBus } from \"../EventBus\";\r\nimport Record from \"./Record\";\r\nimport SyncAltIcon from \"@material-ui/icons/SyncAlt\";\r\nfunction Records() {\r\n  const [records, setRecords] = useState([]);\r\n  const [openRecords, setOpenRecords] = useState(false);\r\n  console.log(records);\r\n  useEffect(() => {\r\n    eventBus.on(\"newRecord\", ({ newRecord }) => {\r\n      console.log(newRecord);\r\n\r\n      setRecords([newRecord]);\r\n    });\r\n  }, []);\r\n  const handleMenu = () => {\r\n    setOpenRecords(!openRecords);\r\n  };\r\n  return (\r\n    <RecordsContainer open={openRecords}>\r\n      <ToggleMenu hasRecord={records.length > 0} onClick={() => handleMenu()}>\r\n        <SyncAltIcon fontSize=\"large\" />\r\n      </ToggleMenu>\r\n      {records.map((record, i) => {\r\n        return <Record record={record} key={i} />;\r\n      })}\r\n    </RecordsContainer>\r\n  );\r\n}\r\n\r\nconst RecordsContainer = styled.div`\r\n  background-color: rgba(100, 100, 100, 0.6);\r\n  box-shadow: 0 0 3px 1px rgba(50,50,50,0.5);\r\n  color: #f9f9f9 ;\r\n  position: absolute;\r\n  top: 0;\r\n  right: 0;\r\n  width: 200px;\r\n  display: flex;\r\n  align-items: center;\r\n  transition: transform 0.2s ease;\r\n  transform: ${(props) => (props.open ? \"translateX(0)\" : \"translateX(100%)\")};\r\n`;\r\n\r\nconst ToggleMenu = styled.div`\r\ncursor: pointer; \r\n  background-color: rgb(139, 82, 82);\r\n  width: 70px;\r\n  margin: 5px 0;\r\n  margin-left: -60px;\r\n  padding: 5px 0px 5px 10px;\r\n  display: ${props=>props.hasRecord ? 'flex' : 'none'};\r\n  align-items: center;\r\n`;\r\nexport default Records;\r\n","import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport Pad from \"./components/Pad\";\nimport { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport ControlPanel from \"./components/ControlPanel\";\nimport { TimeInSeconds } from \"./context\";\nimport { files } from \"./audio_files\";\nimport Records from \"./components/Records\";\nimport { eventBus } from \"./EventBus\";\nfunction App() {\n  const [isPlaying, setIsPlaying] = useState(false); // play indicator\n  const [timeInSeconds, setTimeInSeconds] = useState(0); // global timer in seconds\n  const [records, setRecords] = useState([]);\n\n  useEffect(() => {\n    // running timer as long isPlaying is on\n    if (isPlaying) {\n      const interval = setInterval(() => {\n        setTimeInSeconds((timeInSeconds + 0.01) % 8);\n      }, 10);\n      return () => clearInterval(interval);\n    } else return;\n  });\n  // useEffect(() => {\n  //   eventBus.on(\"newRecord\", ({ newRecord }) => {\n  //     setRecords([...records, newRecord]);\n  //   });\n  // }, []);\n  return (\n    <TimeInSeconds.Provider value={{ timeInSeconds, setTimeInSeconds }}>\n      <StyledApp>\n        <Title>Welcome To The Looper</Title>\n        <StyledPadsContainer>\n          {files.map((file, i) => {\n            return <Pad isPlaying={isPlaying} audioFile={file} key={i} />;\n          })}\n        </StyledPadsContainer>\n        <Records records={records} />\n        <ControlPanel handleState={(bool) => setIsPlaying(bool)} />\n      </StyledApp>\n    </TimeInSeconds.Provider>\n  );\n}\n\nconst StyledApp = styled.div`\n  background-color: rgb(20, 20, 20);\n  height: 100vh;\n  width: 100vw;\n  position: relative;\n  overflow-y: hidden;\n  overflow-x: hidden;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  @media (max-width: 768px) {\n    & > div:nth-child(2) {\n      height: 350px;\n      width: 350px;\n    }\n  }\n  @media (max-width: 480px) {\n    & > div:nth-child(2) {\n      height: 330px;\n      width: 330px;\n    }\n  }\n`;\nconst Title = styled.h2`\n  text-align: center;\n  font-size: 2em;\n  color: #f9f9f9;\n  text-transform: uppercase;\n  letter-spacing: 3px;\n  margin: 50px 0;\n`;\nconst StyledPadsContainer = styled.div`\n  height: 400px;\n  width: 400px;\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  grid-gap: 10px;\n`;\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}